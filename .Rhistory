shiny::runApp()
shiny::runApp()
networkD3_wholeNetwork_ExcludedCategory <- "PeerRelationships"
selected.interactions <- selected.interactions[selected.interactions$Category != networkD3_wholeNetwork_ExcludedCategory,]
nrow(multiparty.interactions)-nrow(selected.interactions)
selected.people <- unique(c(selected.interactions$Primary.Participant.Emlo_ID, selected.interactions$Secondary.Participant.Emlo_ID))
nrow(people.df) - selected.people
nrow(people.df) - length(selected.people)
nrow(people.df)
length(selected.people)
shiny::runApp()
nrow(people.df) - length(selected.people)
paste0("fff",33)
multiparty.people <- unique(c(multiparty.interactions$Primary.Participant.Emlo_ID,multiparty.interactions$Secondary.Participant.Emlo_ID))
length(multiparty.people) - length(selected.people)
shiny::runApp()
shiny::runApp()
f1 <- function(x) x
f2 <- function(x) invisible(x)
f2(1)
f2(1)
f1(1)
f2 <- function(x) invisible(a <- a+1)
a <- 1
f1 <- function(x) x
f2 <- function(x) invisible(a <- a+1)
f2(1)
f1(1)
f2(1)
f1(1)
f1 <- function(x) a<-a+1
f2 <- function(x) invisible(a <- a+1)
f2(1)
f1(1)
f2(1)
f1(1)
shiny::runApp()
shiny::runApp()
shiny::runApp()
list1 <- 1:5
list2 <- 2
list2 <- c(2)
setdiff(list1,list2)
c("foo",setdiff(list1,list2))
shiny::runApp()
shiny::runApp()
networkD3_wholeNetwork_highlightedCategory <- "FamilyRelationship"
edges$FamilyRelationship
c(rep("lightblue",100),rep("red",nrow(networkD3_edges)-100))
c(rep("lightblue",200),rep("red",nrow(networkD3_edges)-100))
c(rep("lightblue",200),rep("red",nrow(networkD3_edges)-200))
c(rep("lightblue",100),rep("red",nrow(networkD3_edges)-100))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
linkColors.by.highlight <- c(rep("#bf3eff",100),rep("#666",nrow(edges)-100))
linkColors.by.highlight
nrow(networkD3_edges)
length(linkColors.by.highlight)
shiny::runApp()
substr(rainbow(length(levels(fl)), start=0,end=1/6),1,7)
fl<-1:10
substr(rainbow(length(fl), start=0,end=1/6),1,7)
linkColors.by.highlight <- c(rep("#bf3eff",100),rep("#666",nrow(edges)-100))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value < 200 ? "lightblue" : "red" }'),
opacityNoHover = FALSE)
linkColors.by.highlight <- c(rep("#bf3eff",100),rep("#bf3eff",nrow(edges)-100))
linkColors.by.highlight
nrow(networkD3_edges)
length(linkColors.by.highlight)
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value < 200 ? "lightblue" : "red" }'),
opacityNoHover = FALSE)
})
linkColors.by.highlight <- c(rep("#bf3eff",100),rep("#bf3eff",nrow(edges)-100))
linkColors.by.highlight
nrow(networkD3_edges)
length(linkColors.by.highlight)
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value < 200 ? "lightblue" : "red" }'),
opacityNoHover = FALSE)
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = "lightblue",
# linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value < 200 ? "lightblue" : "red" }'),
opacityNoHover = FALSE)
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = "#bf3eff",
# linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value < 200 ? "lightblue" : "red" }'),
opacityNoHover = FALSE)
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value < 200 ? "lightblue" : "red" }'),
opacityNoHover = FALSE)
data(MisLinks)
data(MisNodes)
# Create graph
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE)
foo_links <- MisLinks[1:10,]
foo_nodes <- MisNodes[1:10,]
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = "lightblue"
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = rep("lightblue",10)
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = rep("lightblue",9)
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = rep("lightblue",11)
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = as.list(rep("lightblue",11))
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = as.list(rep("lightblue",10))
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = as.list(rep("lightblue",10)),
linkWidth = 2
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = rep("lightblue",10),
linkWidth = 2
)
data(MisLinks)
data(MisNodes)
foo_links <- MisLinks[1:10,]
foo_nodes <- MisNodes[1:10,]
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = rep("lightblue",10),
linkWidth = 2
)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = "red",
linkWidth = 2
)
colourVector <- rep("lightblue",10)
colourVector <- rep("lightblue",10)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = colourVector,
linkWidth = 2
)
colourVector <- rep("red",10)
forceNetwork(Links = foo_links, Nodes = foo_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4, zoom = TRUE,
linkColour = colourVector,
linkWidth = 2
)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 1 ? "#00F" : "#F00" }'))
foo_links
foo_links$colour <- c(1,2,3,4,1,6,1,1,1,1)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 1 ? "#00F" : "#F00" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 1 ? "red" : "#F00" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 5 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 5 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 5 ? "red" : "blue" }'))
foo_links$colour <- c(1,2,3,4,1,6,1,1,1,1)
str(foo_links)
foo_links$colour <- as.integer(c(1,2,3,4,1,6,1,1,1,1)
str(foo_links)
foo_links$colour <- as.integer(c(1,2,3,4,1,6,1,1,1,1))
str(foo_links)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 5 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 0 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour < 0 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value < 0 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 0 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
foo_links$colour <- as.integer(c(1,2,3,4,1,6,1,1,1,1))
str(foo_links)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.colour > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
networkD3_wholeNetwork_highlightedCategory <- "FamilyRelationships"
edges[,networkD3_wholeNetwork_highlightedCategory]
edges[,c(networkD3_wholeNetwork_highlightedCategory)]
edges
str(edges)
networkD3_wholeNetwork_highlightedCategory <- "FamilyRelationship"
edges[,c(networkD3_wholeNetwork_highlightedCategory)]
networkD3_edges <- data.frame("source" = as.numeric(mapvalues(edges$Primary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
"target" = as.numeric(mapvalues(edges$Secondary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
## Encode the colour of the selected event type to highlight
"value" = edges[,c(networkD3_wholeNetwork_highlightedCategory)],
"LinkColor" = c(rep("lightblue",100),rep("red",nrow(edges)-100)))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value > 0 ? "lightred" : "lightblue" }'),
opacityNoHover = FALSE)
networkD3_edges <- data.frame("source" = as.numeric(mapvalues(edges$Primary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
"target" = as.numeric(mapvalues(edges$Secondary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
## Encode the colour of the selected event type to highlight
"value" = edges[,c(networkD3_wholeNetwork_highlightedCategory)],
"LinkColor" = c(rep("lightblue",100),rep("red",nrow(edges)-100)))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value > 0 ? "lightblue" : "lightblue" }'),
opacityNoHover = FALSE)
edges[,c(networkD3_wholeNetwork_highlightedCategory)]
edges[,c(networkD3_wholeNetwork_highlightedCategory)]*10
networkD3_edges <- data.frame("source" = as.numeric(mapvalues(edges$Primary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
"target" = as.numeric(mapvalues(edges$Secondary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
## Encode the colour of the selected event type to highlight
"value" = edges[,c(networkD3_wholeNetwork_highlightedCategory)]*10,
"LinkColor" = c(rep("lightblue",100),rep("red",nrow(edges)-100)))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value > 1 ? "lightblue" : "lightblue" }'),
opacityNoHover = FALSE)
foo_links$value
foo_links$value <- c(1,0,1,0,1,0,1,0,1,0)
str(foo_links)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 0 ? "red" : "blue" }'))
foo_links$value <- c(2,1,2,1,2,1,2,1,2,1)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 0 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
networkD3_edges <- data.frame("source" = as.numeric(mapvalues(edges$Primary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
"target" = as.numeric(mapvalues(edges$Secondary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
## Encode the colour of the selected event type to highlight
"value" = edges[,c(networkD3_wholeNetwork_highlightedCategory)]+1,
"LinkColor" = c(rep("lightblue",100),rep("red",nrow(edges)-100)))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
# linkColour = JS('function(l) { return l.value > 1 ? "lightblue" : "lightblue" }'),
opacityNoHover = FALSE)
networkD3_edges <- data.frame("source" = as.numeric(mapvalues(edges$Primary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
"target" = as.numeric(mapvalues(edges$Secondary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
## Encode the colour of the selected event type to highlight
"value" = edges[,c(networkD3_wholeNetwork_highlightedCategory)]+1,
"LinkColor" = c(rep("lightblue",100),rep("red",nrow(edges)-100)))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
# linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'),
opacityNoHover = FALSE)
networkD3_edges <- data.frame("source" = as.numeric(mapvalues(edges$Primary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
"target" = as.numeric(mapvalues(edges$Secondary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
## Encode the colour of the selected event type to highlight
"value" = edges[,c(networkD3_wholeNetwork_highlightedCategory)]+1,
"LinkColor" = c(rep("lightblue",100),rep("red",nrow(edges)-100)))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
# linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
linkColour = JS('function(l) { return l.value > 1 ? "lightred" : "lightblue" }'),
opacityNoHover = FALSE)
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
# linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
linkColour = JS('function(l) { return l.value > 1 ? "#ff6666" : "lightblue" }'),
opacityNoHover = FALSE)
shiny::runApp()
str(multiparty.interactions)
multiparty.interactions$Category
levels(multiparty.interactions$Category)
levels(multiparty.interactions$Event.or.Relationship.Type)
source('~/Github/EMLO-Visualisations/shinyapp/server/data-processing.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
foo_links$other <- c(2,1,2,1,2,1,2,1,2,1)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.other > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkWidth = c(2,1,2,1,2,1,2,1,2,1),
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkWidth = c(20,1,2,1,2,1,2,1,2,1),
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkWidth = c(20,1,2,10,2,1,2,1,2,1),
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkWidth = JS("function(d) { return Math.sqrt(d.value); }")
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkWidth = JS("function(d) { return Math.sqrt(d.value); }"),
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
foo_links$value <- c(2,14,2,1,2,1,2,1,2,1)
foo_links$other <- c(2,1,2,1,2,1,2,1,2,1)
foo_links$width <- c(2,1,2,1,2,1,2,1,2,1)
str(foo_links)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkWidth = JS("function(d) { return Math.sqrt(d.value); }"),
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
foo_links$value <- c(2,14,2,1,20,1,2,1,2,1)
foo_links$other <- c(2,1,2,1,2,1,2,1,2,1)
foo_links$width <- c(2,1,2,1,2,1,2,1,2,1)
str(foo_links)
forceNetwork(Links = foo_links, Nodes = foo_nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8,
linkWidth = JS("function(d) { return Math.sqrt(d.value); }"),
linkColour = JS('function(l) { return l.value > 1 ? "red" : "blue" }'))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
# linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
linkColour = JS('function(l) { return l.value n % 2 == 0 ? "#ff6666" : "lightblue" }'),
opacityNoHover = FALSE)
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
# linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
linkColour = JS('function(l) { return l.value % 2 == 0 ? "#ff6666" : "lightblue" }'),
opacityNoHover = FALSE)
edges$Total.Connections
10*edges$Total.Connections
edges[,c(input$networkD3_wholeNetwork_highlightedCategory)]
edges[,c(networkD3_wholeNetwork_highlightedCategory)]
10*edges$Total.Connections+edges[,c(networkD3_wholeNetwork_highlightedCategory)]
networkD3_edges <- data.frame("source" = as.numeric(mapvalues(edges$Primary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
"target" = as.numeric(mapvalues(edges$Secondary.Emlo_ID, from = nodes$iperson_id, to = 0:(nrow(nodes)-1),warn_missing = FALSE)),
## Times the total number of connections by 10 and add 1 if of the highlighted category type
## Allows for testing off oddness for colour and size for the edge width
"value" = 10*edges$Total.Connections+edges[,c(networkD3_wholeNetwork_highlightedCategory)],
"LinkColor" = c(rep("lightblue",100),rep("red",nrow(edges)-100)))
forceNetwork(Links = networkD3_edges, Nodes = networkD3_nodes, Source = "source",
Target = "target", Value = "value", NodeID = "surname",zoom = TRUE,
Group = "group",
fontSize = 10,
# linkColour = rep("#bf3eff",nrow(networkD3_edges)),
# linkColour = linkColors.by.highlight,
linkColour = JS('function(l) { return l.value % 2 == 0 ? "#ff6666" : "lightblue" }'),
opacityNoHover = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
