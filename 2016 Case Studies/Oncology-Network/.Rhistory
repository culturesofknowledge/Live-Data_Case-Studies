list.files()
library(xlsx)
cruk.df <- read.xlsx("CRUK-oxford-graph-data.xls", "Edges")
str(cruk.df)
cruk.edges.df <- read.xlsx("CRUK-oxford-graph-data.xls", "Edges")
write.csv("CRUK-oxford-graph-data.csv", cruk.edges.df)
write.csv(file="CRUK-oxford-graph-data.csv", cruk.edges.df)
write.csv(file="CRUK-oxford-edges.csv", cruk.edges.df)
cruk.edges.df <- read.xlsx("CRUK-oxford-graph-data.xls", "Nodes")
cruk.nodes.df <- read.xlsx("CRUK-oxford-graph-data.xls", "Nodes")
write.csv(file="CRUK-oxford-nodes.csv", cruk.nodes.df)
cruk.nodes.df <- read.csv("CRUK-oxford-nodes.csv")
cruk.edges.df <- read.csv("CRUK-oxford-edges.csv")
str(cruk.nodes.df)
write.csv(file="CRUK-oxford-edges.csv", cruk.edges.df, row.names = FALSE)
write.csv(file="CRUK-oxford-nodes.csv", cruk.nodes.df, row.names = FALSE)
cruk.nodes.df <- read.csv("CRUK-oxford-nodes.csv")
cruk.edges.df <- read.csv("CRUK-oxford-edges.csv")
str(cruk.nodes.df)
cruk.edges.df <- read.xlsx("CRUK-oxford-graph-data.xls", "Edges")
cruk.nodes.df <- read.xlsx("CRUK-oxford-graph-data.xls", "Nodes")
write.csv(file="CRUK-oxford-edges.csv", cruk.edges.df, row.names = FALSE)
write.csv(file="CRUK-oxford-nodes.csv", cruk.nodes.df, row.names = FALSE)
setwd("~/Github/Live-Data_Case-Studies/2016 Case Studies/Oncology-Network")
cruk.edges.df <- read.xlsx("data/CRUK-oxford-graph-data.xls", "Edges")
cruk.nodes.df <- read.xlsx("data/CRUK-oxford-graph-data.xls", "Nodes")
str(cruk.nodes.df)
str(cruk.edges.df)
write.csv(file="data/CRUK-oxford-edges.csv", cruk.edges.df, row.names = FALSE)
write.csv(file="data/CRUK-oxford-nodes.csv", cruk.nodes.df, row.names = FALSE)
str(cruk.nodes.df)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout()
library(plyr)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout()
library(dplyr)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout()
library(visNetwork)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout()
str(cruk.edges.df)
str(cruk.nodes.df)
colnames(cruk.edges.df) <- tolower(colnames(cruk.edges.df))
colnames(cruk.nodes.df) <- tolower(colnames(cruk.nodes.df))
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout()
str(cruk.nodes.df)
str(cruk.edges.df)
colnames(cruk.edges.df)[1]
colnames(cruk.edges.df) == c("source")
colnames(cruk.edges.df) == c("source","target")
colnames(cruk.edges.df)[colnames(cruk.edges.df) == c("source","target")] <- c("from","to")
str(cruk.nodes.df)
str(cruk.edges.df)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout()
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout() %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>% visIgraphLayout(layout = "layout_in_circle") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = NA)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_in_circle") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_in_circle", type = "full") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(type = "full") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_in_circle", type = "full") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_as_star", type = "full") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_as_star") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_as_tree") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
## Circle is very dense
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout.grid") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout.gem") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_randomly") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
library(shiny)
shiny::runApp()
shiny::runApp()
shiny::runApp()
cruk.nodes.df <- read.csv("data/CRUK-oxford-nodes.csv")
cruk.edges.df <- read.csv("data/CRUK-oxford-edges.csv")
colnames(cruk.edges.df) <- tolower(colnames(cruk.edges.df))
colnames(cruk.nodes.df) <- tolower(colnames(cruk.nodes.df))
shiny::runApp()
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_randomly") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
colnames(cruk.edges.df) == c("source", "target")
colnames(cruk.edges.df)[colnames(cruk.edges.df) == c("source", "target") <- c("from","to")
colnames(cruk.edges.df)[colnames(cruk.edges.df)] == c("source", "target") <- c("from","to")
colnames(cruk.edges.df)[colnames(cruk.edges.df) == c("source", "target")] <- c("from","to")
cruk.nodes.df <- read.csv("data/CRUK-oxford-nodes.csv")
cruk.edges.df <- read.csv("data/CRUK-oxford-edges.csv")
colnames(cruk.edges.df) <- tolower(colnames(cruk.edges.df))
colnames(cruk.nodes.df) <- tolower(colnames(cruk.nodes.df))
colnames(cruk.edges.df)[colnames(cruk.edges.df) == c("source", "target")] <- c("from","to")
visNetwork(node = cruk.nodes.df, edges = cruk.edges.df) %>%
visNodes(label = FALSE) %>%
visIgraphLayout(layout = "layout_randomly") %>%
visInteraction(tooltipDelay = 0.2, hideEdgesOnDrag = TRUE, dragNodes = FALSE, dragView = FALSE, zoomView = TRUE) %>%
visOptions(highlightNearest = TRUE)
shiny::runApp()
shiny::runApp()
str(cruk.nodes.df)
shiny::runApp()
str(cruk.edges.df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
cruk.edges.df$weight
cruk.edges.df$weight == 10
(cruk.edges.df$weight == 10) +1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
cruk.nodes.df$type
cruk.nodes.df$type == "Person"
cruk.nodes.df <- cruk.nodes.df[cruk.nodes.df$type == "Person",]
cruk.edges.df$from
subset(cruk.edges.df, from %in% cruk.nodes.df$id)
subset(cruk.edges.df, from %in% cruk.nodes.df$id)
subset(cruk.edges.df, from %in% cruk.nodes.df$id & to %in% cruk.nodes.df$id)
nrow(subset(cruk.edges.df, from %in% cruk.nodes.df$id & to %in% cruk.nodes.df$id))
shiny::runApp()
cruk.nodes.df <- read.csv("data/CRUK-oxford-nodes.csv")
cruk.edges.df <- read.csv("data/CRUK-oxford-edges.csv")
## colnames need to be lower case
colnames(cruk.edges.df) <- tolower(colnames(cruk.edges.df))
colnames(cruk.nodes.df) <- tolower(colnames(cruk.nodes.df))
## visNetwork wants from and to not source and target
colnames(cruk.edges.df)[colnames(cruk.edges.df) == c("source", "target")] <- c("from","to")
## the vertex tooltip is added by way of the title column:
cruk.nodes.df$title <- cruk.nodes.df$label
## Extract only people
cruk.nodes.df <- cruk.nodes.df[cruk.nodes.df$type == "Person",]
## Extract only edges that concern people
cruk.edges.df <- subset(cruk.edges.df, from %in% cruk.nodes.df$id & to %in% cruk.nodes.df$id)
## edge width is specified by value
cruk.edges.df$value <- (cruk.edges.df$weight == 10) + 1
shiny::runApp()
